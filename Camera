

package edu.wpi.first.wpilibj.templates;


import edu.wpi.first.wpilibj.camera.AxisCamera;
import edu.wpi.first.wpilibj.image.BinaryImage;
import edu.wpi.first.wpilibj.image.ColorImage;
import edu.wpi.first.wpilibj.image.CriteriaCollection;
import edu.wpi.first.wpilibj.image.NIVision;
import edu.wpi.first.wpilibj.image.NIVisionException;
import edu.wpi.first.wpilibj.camera.AxisCameraException;
//import edu.wpi.first.wpilibj.image.HSLImage;

/**
*
* @authors ngang/suazor/wicksk
*/

public class Camera {

    CriteriaCollection filterGroup;
    //CriteriaCollection is a group of conditions for the particle filter to use.
    public AxisCamera hotGoalDetect;
  

    public void imageProcesser() {
         /*imageProcesser instantiates the CriteriaCollection/Camera 
         and looks for rectangles of a certain height and width*/
         filterGroup = new CriteriaCollection();
         filterGroup.addCriteria(NIVision.MeasurementType.IMAQ_MT_BOUNDING_RECT_HEIGHT, 30, 50, false);
         filterGroup.addCriteria(NIVision.MeasurementType.IMAQ_MT_BOUNDING_RECT_WIDTH, 280, 350, false);
         /*MIN AND MAX PIXEL LIMITS NEED TO BE TESTED AND ADJUSTED THESE ARE JUST PLACEHOLDER VALUES FOR THE LEGIT ONES. 
         CAN ONLY BE TESTED ONCE WE HAVE THE NEW CAMERA :)*/
     
         
}
   public void hotGoalsPresent() throws NIVisionException {
        boolean goalsThere = false;
       /*Creates the boolean which is returned at the end of the method which
       says if the hot goals are present.*/
       hotGoalDetect = AxisCamera.getInstance(); 
    
       try {
           ColorImage currentPic = hotGoalDetect.getImage(); 
           /*a sample image taken with the axis camera must be inserted for 
             testing -  getImage uses realtime pictures from the camera */
           BinaryImage colorIsolation = currentPic.thresholdHSL(74, 155, 25, 100, 10, 65);
           /*This only keeps green items (such as the retroreflective tape 
           will be if a green led is shined onto it.)*/
           BinaryImage bigParticlesOnly = colorIsolation.removeSmallObjects(false, 3);
           /*Keep only particles above a certain size by eroding the image 
           down three times. The 'false' here indicates that it is
           connectivity-4. Connectivity-4 simply means that particles are 
           only considered connected to each other if they touch directly above,
           below, left, and right (imagine a tic-tac-toe board: the particles 
           are only considered connected to the center top, center bottom, 
           middle left, and middle  right.) Connectivity-8 would mean that a 
           particle in the center of the board would be connected to every
           other square in the tic tac toe board.*/
           BinaryImage fillRectangle = bigParticlesOnly.convexHull(false);
           //Fills in rectangles found even if they are slightly covered up.
           BinaryImage findTape = fillRectangle.particleFilter(filterGroup);
           /*Finds the filled in rectangles which match the criteria in the
           CriteriaCollection.*/
           int particleNumber = findTape.getNumberParticles();
          //Gets the number of eliglible goals (particles)
          
          currentPic.free();
          colorIsolation.free();
          bigParticlesOnly.free();
          fillRectangle.free();
          findTape.free();
          
          if (particleNumber > 1) {
              goalsThere = true;
           }
          //If there are eligible goals in the area, sets bool to true.
          else {
              goalsThere = false;
        
              }
           //Returns the boolean which has been set by the hotGoalPresent method. 
          //If no goals are found, sets bool to false.
          
       } 
   catch (AxisCameraException ex) {        // this is needed if the camera.getImage() is called
       ex.printStackTrace();
   }
catch (NIVisionException ex) {
                ex.printStackTrace();
            }
     
      //Gets the errors which have been thrown by the methods in hotGoalPresent.
 if (goalsThere == true) {
     System.out.println ("Goal Detected!");
  }
 else {
     System.out.println ("No Goals Detected.");
 }
   }
 
  }
