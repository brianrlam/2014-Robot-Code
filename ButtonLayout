//This code is used to program the buttons on the joysticks for Aerial Assist

package edu.wpi.first.wpilibj.templates;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Timer;
/**
 *
 * @author anna
 */
 
 //creation of the joysticks, shooter, and arm
public class ButtonLayout{
    private Joystick leftStick;
    private Joystick rightStick;
    private Joystick attackController;
    private Shooter shooter;
    private Arm ballGetter;
    
    //assigning variables to each joystick, shooter, and arm
    public ButtonLayout(Joystick left, Joystick right, Joystick atk,
                             Shooter shoot, Arm ballGetter){
        leftStick= left;
        rightStick= right;
        attackController= atk;
        shooter= shoot;
        this.ballGetter= ballGetter;
    }
    
    //method used to configure the buttons
    public void configureButtons() {
        
        //if button 6 is pressed on the attack controller, shoot the ball
        if (attackController.getRawButton(6)){
            shooter.shoot();
        }
        
        //if button 6 on the attack controller is not pressed, set up the shooter
        else if(!attackController.getRawButton(6)){
            shooter.setup();
        }
        /* if (attackController.getRawButton(2)){
            shooter.test2();
        }
         if (attackController.getRawButton(4)){
            shooter.test1();
         }
         if (attackController.getRawButton(8)){
            shooter.test3();
         }*/
         
         //if button 5 on the attack controller is pressed, then raise the arm
        if (attackController.getRawButton(5)){
            ballGetter.up();
        }
        
        //if button 7 on the attack controller is pressed, then lower the arm
         if (attackController.getRawButton(7)){
            ballGetter.down();
        }
        
        //if button 3 on the attack controller is pressed, then spin the roller forwards
        if(attackController.getRawButton(3)){
            ballGetter.spin();
        }
        
        //if button 3 on the attack controller is not pressed, then stop spinning
        else if(!attackController.getRawButton(3)){
            ballGetter.spinStop();
           // System.out.println("NOT rolling");
        }
        
        //if button 1 on the attack controller is pressed, then spin the roller backwards
        if(attackController.getRawButton(1)){
            ballGetter.spinBack();
        }
        
        //if button 1 on the attack controller is not pressed, then stop spinning
        else if(!attackController.getRawButton(1)){
            ballGetter.spinStop();
           // System.out.println("NOT rolling");
        }
        
    }
}
